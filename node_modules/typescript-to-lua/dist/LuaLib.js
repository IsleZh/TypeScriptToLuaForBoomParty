"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLuaLibBundle = exports.loadLuaLibFeatures = exports.LuaLibFeature = void 0;
const path = require("path");
var LuaLibFeature;
(function (LuaLibFeature) {
    LuaLibFeature["ArrayConcat"] = "ArrayConcat";
    LuaLibFeature["ArrayEntries"] = "ArrayEntries";
    LuaLibFeature["ArrayEvery"] = "ArrayEvery";
    LuaLibFeature["ArrayFilter"] = "ArrayFilter";
    LuaLibFeature["ArrayForEach"] = "ArrayForEach";
    LuaLibFeature["ArrayFind"] = "ArrayFind";
    LuaLibFeature["ArrayFindIndex"] = "ArrayFindIndex";
    LuaLibFeature["ArrayIncludes"] = "ArrayIncludes";
    LuaLibFeature["ArrayIndexOf"] = "ArrayIndexOf";
    LuaLibFeature["ArrayIsArray"] = "ArrayIsArray";
    LuaLibFeature["ArrayJoin"] = "ArrayJoin";
    LuaLibFeature["ArrayMap"] = "ArrayMap";
    LuaLibFeature["ArrayPush"] = "ArrayPush";
    LuaLibFeature["ArrayReduce"] = "ArrayReduce";
    LuaLibFeature["ArrayReduceRight"] = "ArrayReduceRight";
    LuaLibFeature["ArrayReverse"] = "ArrayReverse";
    LuaLibFeature["ArrayShift"] = "ArrayShift";
    LuaLibFeature["ArrayUnshift"] = "ArrayUnshift";
    LuaLibFeature["ArraySort"] = "ArraySort";
    LuaLibFeature["ArraySlice"] = "ArraySlice";
    LuaLibFeature["ArraySome"] = "ArraySome";
    LuaLibFeature["ArraySplice"] = "ArraySplice";
    LuaLibFeature["ArrayToObject"] = "ArrayToObject";
    LuaLibFeature["ArrayFlat"] = "ArrayFlat";
    LuaLibFeature["ArrayFlatMap"] = "ArrayFlatMap";
    LuaLibFeature["ArraySetLength"] = "ArraySetLength";
    LuaLibFeature["Await"] = "Await";
    LuaLibFeature["Class"] = "Class";
    LuaLibFeature["ClassExtends"] = "ClassExtends";
    LuaLibFeature["CloneDescriptor"] = "CloneDescriptor";
    LuaLibFeature["Decorate"] = "Decorate";
    LuaLibFeature["DecorateParam"] = "DecorateParam";
    LuaLibFeature["Delete"] = "Delete";
    LuaLibFeature["DelegatedYield"] = "DelegatedYield";
    LuaLibFeature["Error"] = "Error";
    LuaLibFeature["FunctionBind"] = "FunctionBind";
    LuaLibFeature["Generator"] = "Generator";
    LuaLibFeature["InstanceOf"] = "InstanceOf";
    LuaLibFeature["InstanceOfObject"] = "InstanceOfObject";
    LuaLibFeature["Iterator"] = "Iterator";
    LuaLibFeature["Map"] = "Map";
    LuaLibFeature["MathAtan2"] = "MathAtan2";
    LuaLibFeature["MathSign"] = "MathSign";
    LuaLibFeature["New"] = "New";
    LuaLibFeature["Number"] = "Number";
    LuaLibFeature["NumberIsFinite"] = "NumberIsFinite";
    LuaLibFeature["NumberIsNaN"] = "NumberIsNaN";
    LuaLibFeature["NumberToString"] = "NumberToString";
    LuaLibFeature["ObjectAssign"] = "ObjectAssign";
    LuaLibFeature["ObjectDefineProperty"] = "ObjectDefineProperty";
    LuaLibFeature["ObjectEntries"] = "ObjectEntries";
    LuaLibFeature["ObjectFromEntries"] = "ObjectFromEntries";
    LuaLibFeature["ObjectGetOwnPropertyDescriptor"] = "ObjectGetOwnPropertyDescriptor";
    LuaLibFeature["ObjectGetOwnPropertyDescriptors"] = "ObjectGetOwnPropertyDescriptors";
    LuaLibFeature["ObjectKeys"] = "ObjectKeys";
    LuaLibFeature["ObjectRest"] = "ObjectRest";
    LuaLibFeature["ObjectValues"] = "ObjectValues";
    LuaLibFeature["ParseFloat"] = "ParseFloat";
    LuaLibFeature["ParseInt"] = "ParseInt";
    LuaLibFeature["Promise"] = "Promise";
    LuaLibFeature["PromiseAll"] = "PromiseAll";
    LuaLibFeature["PromiseAllSettled"] = "PromiseAllSettled";
    LuaLibFeature["PromiseAny"] = "PromiseAny";
    LuaLibFeature["PromiseRace"] = "PromiseRace";
    LuaLibFeature["Set"] = "Set";
    LuaLibFeature["SetDescriptor"] = "SetDescriptor";
    LuaLibFeature["SparseArrayNew"] = "SparseArrayNew";
    LuaLibFeature["SparseArrayPush"] = "SparseArrayPush";
    LuaLibFeature["SparseArraySpread"] = "SparseArraySpread";
    LuaLibFeature["WeakMap"] = "WeakMap";
    LuaLibFeature["WeakSet"] = "WeakSet";
    LuaLibFeature["SourceMapTraceBack"] = "SourceMapTraceBack";
    LuaLibFeature["Spread"] = "Spread";
    LuaLibFeature["StringAccess"] = "StringAccess";
    LuaLibFeature["StringCharAt"] = "StringCharAt";
    LuaLibFeature["StringCharCodeAt"] = "StringCharCodeAt";
    LuaLibFeature["StringConcat"] = "StringConcat";
    LuaLibFeature["StringEndsWith"] = "StringEndsWith";
    LuaLibFeature["StringIncludes"] = "StringIncludes";
    LuaLibFeature["StringPadEnd"] = "StringPadEnd";
    LuaLibFeature["StringPadStart"] = "StringPadStart";
    LuaLibFeature["StringReplace"] = "StringReplace";
    LuaLibFeature["StringReplaceAll"] = "StringReplaceAll";
    LuaLibFeature["StringSlice"] = "StringSlice";
    LuaLibFeature["StringSplit"] = "StringSplit";
    LuaLibFeature["StringStartsWith"] = "StringStartsWith";
    LuaLibFeature["StringSubstr"] = "StringSubstr";
    LuaLibFeature["StringSubstring"] = "StringSubstring";
    LuaLibFeature["StringTrim"] = "StringTrim";
    LuaLibFeature["StringTrimEnd"] = "StringTrimEnd";
    LuaLibFeature["StringTrimStart"] = "StringTrimStart";
    LuaLibFeature["Symbol"] = "Symbol";
    LuaLibFeature["SymbolRegistry"] = "SymbolRegistry";
    LuaLibFeature["TypeOf"] = "TypeOf";
    LuaLibFeature["Unpack"] = "Unpack";
})(LuaLibFeature = exports.LuaLibFeature || (exports.LuaLibFeature = {}));
/* eslint-disable @typescript-eslint/naming-convention */
const luaLibDependencies = {
    ArrayConcat: [LuaLibFeature.ArrayIsArray],
    ArrayFlat: [LuaLibFeature.ArrayConcat, LuaLibFeature.ArrayIsArray],
    ArrayFlatMap: [LuaLibFeature.ArrayConcat, LuaLibFeature.ArrayIsArray],
    Await: [LuaLibFeature.InstanceOf, LuaLibFeature.New, LuaLibFeature.Promise],
    Decorate: [LuaLibFeature.ObjectGetOwnPropertyDescriptor, LuaLibFeature.SetDescriptor, LuaLibFeature.ObjectAssign],
    DelegatedYield: [LuaLibFeature.StringAccess],
    Delete: [LuaLibFeature.ObjectGetOwnPropertyDescriptors, LuaLibFeature.Error, LuaLibFeature.New],
    Error: [LuaLibFeature.Class, LuaLibFeature.ClassExtends, LuaLibFeature.New],
    FunctionBind: [LuaLibFeature.Unpack],
    Generator: [LuaLibFeature.Symbol],
    InstanceOf: [LuaLibFeature.Symbol],
    Iterator: [LuaLibFeature.Symbol],
    NumberToString: [LuaLibFeature.StringAccess],
    ObjectDefineProperty: [LuaLibFeature.CloneDescriptor, LuaLibFeature.SetDescriptor],
    ObjectFromEntries: [LuaLibFeature.Iterator, LuaLibFeature.Symbol],
    Promise: [
        LuaLibFeature.ArrayPush,
        LuaLibFeature.Class,
        LuaLibFeature.FunctionBind,
        LuaLibFeature.InstanceOf,
        LuaLibFeature.New,
    ],
    PromiseAll: [LuaLibFeature.InstanceOf, LuaLibFeature.New, LuaLibFeature.Promise, LuaLibFeature.Iterator],
    PromiseAllSettled: [LuaLibFeature.InstanceOf, LuaLibFeature.New, LuaLibFeature.Promise, LuaLibFeature.Iterator],
    PromiseAny: [
        LuaLibFeature.ArrayPush,
        LuaLibFeature.InstanceOf,
        LuaLibFeature.New,
        LuaLibFeature.Promise,
        LuaLibFeature.Iterator,
    ],
    PromiseRace: [
        LuaLibFeature.ArrayPush,
        LuaLibFeature.InstanceOf,
        LuaLibFeature.New,
        LuaLibFeature.Promise,
        LuaLibFeature.Iterator,
    ],
    ParseFloat: [LuaLibFeature.StringAccess],
    ParseInt: [LuaLibFeature.StringSubstr, LuaLibFeature.StringSubstring],
    SetDescriptor: [LuaLibFeature.CloneDescriptor],
    Spread: [LuaLibFeature.Iterator, LuaLibFeature.StringAccess, LuaLibFeature.Unpack],
    StringSplit: [LuaLibFeature.StringSubstring, LuaLibFeature.StringAccess],
    SymbolRegistry: [LuaLibFeature.Symbol],
    Map: [LuaLibFeature.InstanceOf, LuaLibFeature.Iterator, LuaLibFeature.Symbol, LuaLibFeature.Class],
    Set: [LuaLibFeature.InstanceOf, LuaLibFeature.Iterator, LuaLibFeature.Symbol, LuaLibFeature.Class],
    WeakMap: [LuaLibFeature.InstanceOf, LuaLibFeature.Iterator, LuaLibFeature.Symbol, LuaLibFeature.Class],
    WeakSet: [LuaLibFeature.InstanceOf, LuaLibFeature.Iterator, LuaLibFeature.Symbol, LuaLibFeature.Class],
};
/* eslint-enable @typescript-eslint/naming-convention */
function loadLuaLibFeatures(features, emitHost) {
    let result = "";
    const loadedFeatures = new Set();
    function load(feature) {
        if (loadedFeatures.has(feature))
            return;
        loadedFeatures.add(feature);
        const dependencies = luaLibDependencies[feature];
        if (dependencies) {
            dependencies.forEach(load);
        }
        const featurePath = path.resolve(__dirname, `../dist/lualib/${feature}.lua`);
        const luaLibFeature = emitHost.readFile(featurePath);
        if (luaLibFeature !== undefined) {
            result += luaLibFeature + "\n";
        }
        else {
            throw new Error(`Could not load lualib feature from '${featurePath}'`);
        }
    }
    for (const feature of features) {
        load(feature);
    }
    return result;
}
exports.loadLuaLibFeatures = loadLuaLibFeatures;
let luaLibBundleContent;
function getLuaLibBundle(emitHost) {
    if (luaLibBundleContent === undefined) {
        const lualibPath = path.resolve(__dirname, "../dist/lualib/lualib_bundle.lua");
        const result = emitHost.readFile(lualibPath);
        if (result !== undefined) {
            luaLibBundleContent = result;
        }
        else {
            throw new Error(`Could not load lualib bundle from '${lualibPath}'`);
        }
    }
    return luaLibBundleContent;
}
exports.getLuaLibBundle = getLuaLibBundle;
//# sourceMappingURL=LuaLib.js.map